
version: '3.3'

services:
  homeassistant:
    container_name: home-assistant
    image: homeassistant/home-assistant:latest
    volumes:
      - /home/ben-ami/homeassistant/:/hass
      - /home/ben-ami/homeassistant:/config
    environment:
      - TZ=Asia/Israel
    restart: always
    network_mode: host

  portainer:
    image: portainer/portainer
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/portainer/data:/data
      - ${USERDIR}/docker/shared:/shared
    environment:
      - TZ=${TZ}

  mosquitto:
    image: eclipse-mosquitto
    hostname: mosquitto
    container_name: mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ~/docker/mosquitto:/etc/mosquitto
      - ~/docker/mosquitto/mosquitto.conf:/mosquitto/mosquitto.conf


  redalert:
    image: techblog/redalert
    container_name: redalert
    restart: always
    environment:
      - MQTT_HOST=10.0.0.12
      - MQTT_USER=XXXX
      - MQTT_PASS=XXXXXX
      - MQTT_PORT=1883
      - DEBUG_MODE=False
    restart: unless-stopped
  
  appdaemon: 
    image: acockburn/appdaemon:latest
    container_name: appdaemon 
    environment: 
      - HA_URL="http://homeassistant:8123" 
      - HA_KEY="welcome"
      - TOKEN= "XXXXX.XXXXX.XXXXXX"
    restart: always
    network_mode: bridge 
    ports:
      - 5050:5050 
    volumes: 
      - ~/homeassistant/appdaemon/config:/conf 
    depends_on: 
      - homeassistant
    
  switcher_api:
    image: tomerfi/switcher_webapi:latest
    container_name: "switcher_webapi"
    env_file:
      - .env_vars
    ports:
      - 8000:8000
    restart: unless-stopped
    
  node-red:
    container_name: "node-red"
    image: nodered/node-red:latest
    environment:
      - TZ=Europe/Amsterdam
    network_mode:  bridge
    volumes:
      - node-red-data
    ports:
      - "1880:1880"      

  ha_dockermon:
    container_name: ha_dockermon
    hostname: ha_dockermon 
    image:  philhawthorne/ha-dockermon 
    restart: always 
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock 
       - /volume1/docker/docker_mon/config:/config
    ports:
       - 8126:8126

  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - UMASK_SET=022 #optional
      - PLEX_CLAIM= #optional
    volumes:
      - /path/to/library:/config
      - /path/to/series:/tv
      - /path/to/movies:/movies
      - /path/to/downloads:/downloads
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - UMASK_SET=022 #optional
    volumes:
      - /path/to/data:/config
      - /path/to/series:/tv
      - /path/to/plex/Movies:/movies
      - /path/to/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
 
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
    depends_on:
        - transmission
    volumes:
        - /path/to/radarr/config:/config
        - /path/to/plex/Movies:/movies
        - /path/to/utorrent/downloads:/media
        - /path/to/downloads:/downloads
    ports:
        - 7878:7878

  utorrent:
    image: "dbarton/utorrent"
    container_name: "utorrent"
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
        - /path/to/utorrent/settings:/settings
        - /path/to/utorrent/downloads:/media
    ports:
        - 8080:8080
        - 6881:6881
    restart: always

  timemachine:
    image: odarriba/timemachine
    container_name: timemachine
    restart: unless-stopped
    volumes:
        - /path/to/timemachine:/timemachine
    ports:
        - 548:548
        - 636:636
    environment:  
        - PUID=1000
        - PGID=1000
        - AFP_SIZE_LIMIT=250000
        - AFP_NAME=Backups

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
        - PUID=1000
        - PGID=1000
        - RUN_OPTS=run options here #optional
    volumes:
        - /path/to/data:/config
        - /path/to/blackhole:/downloads
    ports:
        - 9117:9117
    restart: unless-stopped

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    environment:
      - PUID=1000
      - PGID=1000
      - TRANSMISSION_WEB_HOME=/combustion-release/ #optional
      - USER=XXXXX #optional
      - PASS=XXXXXX #optional
    volumes:
      - /path/to/data:/config
      - /path/to/downloads:/downloads
      - /path/to/movies:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: unless-stopped

  adguard-home:
    image: adguard/adguardhome
    container_name: adguard-home
    restart: always
    network_mode: host
    volumes:
      - ./adguard/work:/docker/adguardhome/work
      - ./adguard/conf:/docker/adguardhome/conf

  openvpn:
    cap_add:
     - NET_ADMIN
    image: kylemanna/openvpn
    container_name: openvpn
    ports:
     - "1194:1194/udp"
    restart: always
    volumes:
     - ./openvpn-data/conf:/etc/openvpn

  selenium-hub:
    image: selenium/hub:3.141.59-20200409
    container_name: selenium-hub
    ports:
        - "4444:4444"
  
  chrome:
    image: selenium/node-chrome:latest
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
  